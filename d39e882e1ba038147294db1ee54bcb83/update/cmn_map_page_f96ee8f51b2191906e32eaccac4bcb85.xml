<?xml version="1.0" encoding="UTF-8"?><record_update table="cmn_map_page">
    <cmn_map_page action="INSERT_OR_UPDATE">
        <center_address>35.472511,-79.897494</center_address>
        <center_latitude>35.4729611</center_latitude>
        <center_longitude>-79.90594879999999</center_longitude>
        <controls_size>large</controls_size>
        <coordinates_retrieved_on/>
        <disable_map_controls/>
        <disable_nav_bar>false</disable_nav_bar>
        <filter/>
        <initial_zoom>8</initial_zoom>
        <name>x_g_sonc_dit_nsw22_sitesdown</name>
        <overview>true</overview>
        <refresh_on_zoom>false</refresh_on_zoom>
        <roles/>
        <script><![CDATA[/*
Description:
This map will display network sites that have an open "not responding" Incident.

Steps:

1) Get list of Incidents with network ci, and location with a site reference
2) Of unique sites, use that list to build map points with Red icons.

Improvements:
 - Make sure the site list doesn not have duplicates. There could have been more than one incident/site.

*/
var funcName = "mappage dit_nsw22_sitesdown: ";
gs.info(funcName + "Called to create device down map");
// query for incidents we want
var incDownSites = [];
var incDownGr = new GlideRecord("incident");
//gr.addQuery('u_nsw_site', '!=', null);
incDownGr.addEncodedQuery('active=true^incident_state<6^short_descriptionLIKEstopped resp^locationISNOTEMPTY^location.u_nsw_siteISNOTEMPTY');
incDownGr.addActiveQuery();
incDownGr.query();
while (incDownGr.next()) {
    // add site id to list
    var siteDownRcd = {};
    siteDownRcd['inc_number'] = incDownGr.getValue('number');
    siteDownRcd['locName'] = incDownGr.getDisplayValue('location');
    if (siteDownRcd['locName'] != '') {
        // get the ref location rcd
        var locSysId = incDownGr.getValue('location');
        siteDownRcd['locSysId'] = locSysId;

        incDownSites.push(siteDownRcd);
    }
}

gs.info(funcName + "Gathered " + incDownSites.length + " Incidents with STOPPED RESP");

// use the gathered list to put icons on the map
for (var sindex = 0; sindex < incDownSites.length; sindex++) {
    if (sindex >= 0 && sindex < 5) {
        gs.info(funcName + "Down location = " + JSON.stringify(incDownSites[sindex]));
    }
	var locGr = new GlideRecord("cmn_location");
	locGr.addEncodedQuery('u_nsw_site_id>0^nameCONTAINSPop');
	gotLoc = locGr.get(incDownSites[sindex]['locSysId']);
    //gs.info(funcName + "gotLoc is " + gotLoc); // logs true or false
    if (gotLoc) {
		if (locGr.latitude && locGr.longitude) {
			var item = map.addItem(locGr);
			item.latitude = locGr.getValue('latitude');
			item.longitude = locGr.getValue('longitude');
			item.dialog_title = locGr.getDisplayValue();
			item.icon = "https://maps.google.com/mapfiles/kml/pushpin/red-pushpin.png";
			item.icon_width = "22";
			item.icon_height = "22";
		} else {
			gs.warn(funcName + "Cannot diplay down site - no lat, long for " + locGr.getDisplayValue());
		}
	}
}]]></script>
        <show_device_location>true</show_device_location>
        <suffix>sitesdown</suffix>
        <sys_class_name>cmn_map_page</sys_class_name>
        <sys_created_by>rlwilliams11</sys_created_by>
        <sys_created_on>2022-08-26 19:20:31</sys_created_on>
        <sys_id>f96ee8f51b2191906e32eaccac4bcb85</sys_id>
        <sys_mod_count>32</sys_mod_count>
        <sys_name>x_g_sonc_dit_nsw22_sitesdown</sys_name>
        <sys_package display_value="dit nsw22" source="x_g_sonc_dit_nsw22">d39e882e1ba038147294db1ee54bcb83</sys_package>
        <sys_policy/>
        <sys_scope display_value="dit nsw22">d39e882e1ba038147294db1ee54bcb83</sys_scope>
        <sys_update_name>cmn_map_page_f96ee8f51b2191906e32eaccac4bcb85</sys_update_name>
        <sys_updated_by>rlwilliams11</sys_updated_by>
        <sys_updated_on>2022-08-26 21:37:32</sys_updated_on>
        <type>satellite</type>
        <type_selection>buttons</type_selection>
        <use_advanced_configuration>false</use_advanced_configuration>
    </cmn_map_page>
</record_update>
